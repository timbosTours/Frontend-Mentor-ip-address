{"ast":null,"code":"var _jsxFileName = \"/Users/timothyfawcett/Desktop/Projects/FrontEndMentor/ip-address-tracker-master/my-app/src/components/Banner.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport img from '../images/pattern-bg.png';\nimport arrow from '../images/icon-arrow.svg';\nimport DataDisplay from './DataDisplay';\nimport Map from './Map';\nimport useFetch from '../hooks/useFetch';\nimport useFetchSearch from '../hooks/useFetchSearch';\n\n// TODO add onSubmit handler function(hook) to  form element too search ip address\n// .env api key\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Banner() {\n  _s();\n  const [ipAddress, setIpAddress] = useState('');\n  const {\n    data,\n    loading,\n    error\n  } = useFetch('https://geo.ipify.org/api/v2/country?apiKey=at_8GE1HPonrAAGY0ggGjL3YAuoxACZ1');\n  const {\n    searchData,\n    searchLoading,\n    searchError\n  } = useFetchSearch(`https://geo.ipify.org/api/v2/country?apiKey=at_8GE1HPonrAAGY0ggGjL3YAuoxACZ1&ipAddress=${ipAddress}`);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"LOADING...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 23\n  }, this);\n  if (searchLoading) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"LOADING...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 29\n  }, this);\n  if (error) console.log(error);\n  if (searchError) console.log(error);\n  if (data) console.log(data);\n  if (searchData) console.log(searchData);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner\",\n      style: {\n        backgroundImage: `url(${img})`,\n        backgroundRepeat: 'no-repeat'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"IP Address Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: useFetchSearch,\n        type: \"submit\",\n        className: \"input-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => {\n            setIpAddress(e.target.value);\n          },\n          value: ipAddress,\n          className: \"input-field\",\n          placeholder: \"Search for any IP address or domain\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"image\",\n          alt: \"submit button\",\n          src: arrow,\n          className: \"input-btn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), data && /*#__PURE__*/_jsxDEV(DataDisplay, {\n        data: data\n      }, data, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 18\n      }, this), searchData && /*#__PURE__*/_jsxDEV(DataDisplay, {\n        data: searchData\n      }, searchData, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(Map, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Banner, \"zy2kA4EiyuD2Dv5Xg8RcAnb5IOY=\", false, function () {\n  return [useFetch, useFetchSearch];\n});\n_c = Banner;\nexport default Banner;\nvar _c;\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"names":["React","useState","img","arrow","DataDisplay","Map","useFetch","useFetchSearch","Banner","ipAddress","setIpAddress","data","loading","error","searchData","searchLoading","searchError","console","log","backgroundImage","backgroundRepeat","e","target","value"],"sources":["/Users/timothyfawcett/Desktop/Projects/FrontEndMentor/ip-address-tracker-master/my-app/src/components/Banner.js"],"sourcesContent":["import React, {useState} from 'react';\nimport img from '../images/pattern-bg.png';\nimport arrow from '../images/icon-arrow.svg';\nimport DataDisplay from './DataDisplay';\nimport Map from './Map';\nimport useFetch from '../hooks/useFetch';\nimport useFetchSearch from '../hooks/useFetchSearch';\n\n// TODO add onSubmit handler function(hook) to  form element too search ip address\n// .env api key\n\nfunction Banner() {\n  const [ipAddress, setIpAddress] = useState('');\n\n  const { data, loading, error } = useFetch('https://geo.ipify.org/api/v2/country?apiKey=at_8GE1HPonrAAGY0ggGjL3YAuoxACZ1');\n\n  const {searchData, searchLoading, searchError} = useFetchSearch(`https://geo.ipify.org/api/v2/country?apiKey=at_8GE1HPonrAAGY0ggGjL3YAuoxACZ1&ipAddress=${ipAddress}`)\n\n  if (loading) return <h1>LOADING...</h1>;\n  if (searchLoading) return <h1>LOADING...</h1>;\n\n  if (error) console.log(error);\n  if (searchError) console.log(error);\n\n  if (data) console.log(data)\n  if (searchData) console.log(searchData)\n  \n  return (\n    <>\n      <div className='banner' style={{ backgroundImage: `url(${img})`, backgroundRepeat: 'no-repeat' }}>\n        <h1 className='title'>IP Address Tracker</h1>\n        <form\n          onSubmit={useFetchSearch}\n          type=\"submit\"\n          className='input-form'>\n          <input\n            type=\"text\"\n            onChange={(e)=>{setIpAddress(e.target.value)}} \n            value={ipAddress}\n            className='input-field'\n            placeholder='Search for any IP address or domain' />\n          <input\n            type=\"image\"\n            alt='submit button'\n            src={arrow} className='input-btn' />\n        </form>\n        {data && <DataDisplay key={data} data={data} />}\n        {searchData && <DataDisplay key={searchData} data={searchData} />}\n          <Map />\n      </div>\n    </>\n  )\n}\n\nexport default Banner"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,GAAG,MAAM,0BAA0B;AAC1C,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,OAAOC,cAAc,MAAM,yBAAyB;;AAEpD;AACA;AAAA;AAAA;AAEA,SAASC,MAAM,GAAG;EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAM;IAAEU,IAAI;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGP,QAAQ,CAAC,8EAA8E,CAAC;EAEzH,MAAM;IAACQ,UAAU;IAAEC,aAAa;IAAEC;EAAW,CAAC,GAAGT,cAAc,CAAE,0FAAyFE,SAAU,EAAC,CAAC;EAEtK,IAAIG,OAAO,EAAE,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAmB;EACvC,IAAIG,aAAa,EAAE,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAmB;EAE7C,IAAIF,KAAK,EAAEI,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC;EAC7B,IAAIG,WAAW,EAAEC,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC;EAEnC,IAAIF,IAAI,EAAEM,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC;EAC3B,IAAIG,UAAU,EAAEG,OAAO,CAACC,GAAG,CAACJ,UAAU,CAAC;EAEvC,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,QAAQ;MAAC,KAAK,EAAE;QAAEK,eAAe,EAAG,OAAMjB,GAAI,GAAE;QAAEkB,gBAAgB,EAAE;MAAY,CAAE;MAAA,wBAC/F;QAAI,SAAS,EAAC,OAAO;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAwB,eAC7C;QACE,QAAQ,EAAEb,cAAe;QACzB,IAAI,EAAC,QAAQ;QACb,SAAS,EAAC,YAAY;QAAA,wBACtB;UACE,IAAI,EAAC,MAAM;UACX,QAAQ,EAAGc,CAAC,IAAG;YAACX,YAAY,CAACW,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;UAAA,CAAE;UAC9C,KAAK,EAAEd,SAAU;UACjB,SAAS,EAAC,aAAa;UACvB,WAAW,EAAC;QAAqC;UAAA;UAAA;UAAA;QAAA,QAAG,eACtD;UACE,IAAI,EAAC,OAAO;UACZ,GAAG,EAAC,eAAe;UACnB,GAAG,EAAEN,KAAM;UAAC,SAAS,EAAC;QAAW;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACjC,EACNQ,IAAI,iBAAI,QAAC,WAAW;QAAY,IAAI,EAAEA;MAAK,GAAjBA,IAAI;QAAA;QAAA;QAAA;MAAA,QAAgB,EAC9CG,UAAU,iBAAI,QAAC,WAAW;QAAkB,IAAI,EAAEA;MAAW,GAA7BA,UAAU;QAAA;QAAA;QAAA;MAAA,QAAsB,eAC/D,QAAC,GAAG;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EACL,iBACL;AAEP;AAAC,GAzCQN,MAAM;EAAA,QAGoBF,QAAQ,EAEQC,cAAc;AAAA;AAAA,KALxDC,MAAM;AA2Cf,eAAeA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}