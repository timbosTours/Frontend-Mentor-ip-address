{"ast":null,"code":"var _jsxFileName = \"/Users/timothyfawcett/Desktop/Projects/FrontEndMentor/ip-address-tracker-master/my-app/src/pages/Search.js\";\nimport React from 'react';\nimport Map from '../components/Map';\nimport DataDisplay from '../components/DataDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Search(props) {\n  const searchData = props.returnedData.data;\n  // get search IP Address from props\n  // let ipAddress = props.searchIp.ipAddress\n\n  // get api and key from .env files\n  // const api = process.env.REACT_APP_API;\n  // const apiKey = process.env.REACT_APP_API_KEY\n\n  // fetch search IP Address data\n  // const { searchData, searchLoading, searchError } = useFetchSearch('http://localhost:5000/search');\n\n  // while awaiting data render loading\n  // if (searchLoading) return <h1 className='title'>LOADING...</h1>;\n\n  // // if theres an error in the search log t to the console\n  // if (searchError) console.log(searchError);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [searchData && /*#__PURE__*/_jsxDEV(DataDisplay, {\n      data: searchData\n    }, searchData.ipAddress, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 28\n    }, this), searchData && /*#__PURE__*/_jsxDEV(Map, {\n      data: searchData\n    }, searchData.ipAddress, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true);\n}\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","Map","DataDisplay","Search","props","searchData","returnedData","data","ipAddress"],"sources":["/Users/timothyfawcett/Desktop/Projects/FrontEndMentor/ip-address-tracker-master/my-app/src/pages/Search.js"],"sourcesContent":["import React from 'react';\nimport Map from '../components/Map';\nimport DataDisplay from '../components/DataDisplay';\n\nfunction Search(props) {\n    const searchData = props.returnedData.data\n    // get search IP Address from props\n    // let ipAddress = props.searchIp.ipAddress\n\n    // get api and key from .env files\n    // const api = process.env.REACT_APP_API;\n    // const apiKey = process.env.REACT_APP_API_KEY\n\n    // fetch search IP Address data\n    // const { searchData, searchLoading, searchError } = useFetchSearch('http://localhost:5000/search');\n\n    // while awaiting data render loading\n    // if (searchLoading) return <h1 className='title'>LOADING...</h1>;\n    \n    // // if theres an error in the search log t to the console\n    // if (searchError) console.log(searchError);\n\n\n    return (\n        <>\n            {/* conditionally render search data/loading/error */}\n            {searchData && <DataDisplay key={searchData.ipAddress} data={searchData}/> }\n            {searchData && <Map key={searchData.ipAddress} data={searchData} />}\n            {/* {searchError && \n            <div>\n            <h1 className='title'>Error... Please enter valid email address or domain</h1>\n            </div>} */}\n        </>\n    )\n}\n\nexport default Search"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,WAAW,MAAM,2BAA2B;AAAC;AAAA;AAEpD,SAASC,MAAM,CAACC,KAAK,EAAE;EACnB,MAAMC,UAAU,GAAGD,KAAK,CAACE,YAAY,CAACC,IAAI;EAC1C;EACA;;EAEA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;;EAEA;EACA;;EAGA,oBACI;IAAA,WAEKF,UAAU,iBAAI,QAAC,WAAW;MAA4B,IAAI,EAAEA;IAAW,GAAvCA,UAAU,CAACG,SAAS;MAAA;MAAA;MAAA;IAAA,QAAqB,EACzEH,UAAU,iBAAI,QAAC,GAAG;MAA4B,IAAI,EAAEA;IAAW,GAAvCA,UAAU,CAACG,SAAS;MAAA;MAAA;MAAA;IAAA,QAAsB;EAAA,gBAKpE;AAEX;AAAC,KA9BQL,MAAM;AAgCf,eAAeA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}