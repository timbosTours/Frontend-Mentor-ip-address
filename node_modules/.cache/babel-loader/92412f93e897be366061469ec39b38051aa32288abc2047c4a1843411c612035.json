{"ast":null,"code":"var _jsxFileName = \"/Users/timothyfawcett/Desktop/Projects/FrontEndMentor/ip-address-tracker-master/my-app/src/pages/Search.js\";\nimport React from 'react';\nimport useFetchSearch from '../hooks/useFetchSearch';\nimport Map from '../components/Map';\nimport DataDisplay from '../components/DataDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nasync function Search(props) {\n  const returnedData = props.data;\n  // get search IP Address from props\n  // let ipAddress = props.searchIp.ipAddress\n\n  // get api and key from .env files\n  // const api = process.env.REACT_APP_API;\n  // const apiKey = process.env.REACT_APP_API_KEY\n\n  // fetch search IP Address data\n  // const { searchData, searchLoading, searchError } = useFetchSearch('http://localhost:5000/search');\n\n  // while awaiting data render loading\n  // if (searchLoading) return <h1 className='title'>LOADING...</h1>;\n\n  // // if theres an error in the search log t to the console\n  // if (searchError) console.log(searchError);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [returnedData && /*#__PURE__*/_jsxDEV(DataDisplay, {\n      data: returnedData\n    }, returnedData.ipAddress, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 30\n    }, this), returnedData && /*#__PURE__*/_jsxDEV(Map, {\n      data: returnedData\n    }, returnedData.ipAddress, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true);\n}\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useFetchSearch","Map","DataDisplay","Search","props","returnedData","data","ipAddress"],"sources":["/Users/timothyfawcett/Desktop/Projects/FrontEndMentor/ip-address-tracker-master/my-app/src/pages/Search.js"],"sourcesContent":["import React from 'react';\nimport useFetchSearch from '../hooks/useFetchSearch';\nimport Map from '../components/Map';\nimport DataDisplay from '../components/DataDisplay';\n\nasync function Search(props) {\n    const returnedData = props.data\n    // get search IP Address from props\n    // let ipAddress = props.searchIp.ipAddress\n\n    // get api and key from .env files\n    // const api = process.env.REACT_APP_API;\n    // const apiKey = process.env.REACT_APP_API_KEY\n\n    // fetch search IP Address data\n    // const { searchData, searchLoading, searchError } = useFetchSearch('http://localhost:5000/search');\n\n    // while awaiting data render loading\n    // if (searchLoading) return <h1 className='title'>LOADING...</h1>;\n    \n    // // if theres an error in the search log t to the console\n    // if (searchError) console.log(searchError);\n\n\n    return (\n        <>\n            {/* conditionally render search data/loading/error */}\n            {returnedData && <DataDisplay key={returnedData.ipAddress} data={returnedData}/> }\n            {returnedData && <Map key={returnedData.ipAddress} data={returnedData} />}\n            {/* {searchError && \n            <div>\n            <h1 className='title'>Error... Please enter valid email address or domain</h1>\n            </div>} */}\n        </>\n    )\n}\n\nexport default Search"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,yBAAyB;AACpD,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,WAAW,MAAM,2BAA2B;AAAC;AAAA;AAEpD,eAAeC,MAAM,CAACC,KAAK,EAAE;EACzB,MAAMC,YAAY,GAAGD,KAAK,CAACE,IAAI;EAC/B;EACA;;EAEA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;;EAEA;EACA;;EAGA,oBACI;IAAA,WAEKD,YAAY,iBAAI,QAAC,WAAW;MAA8B,IAAI,EAAEA;IAAa,GAA3CA,YAAY,CAACE,SAAS;MAAA;MAAA;MAAA;IAAA,QAAuB,EAC/EF,YAAY,iBAAI,QAAC,GAAG;MAA8B,IAAI,EAAEA;IAAa,GAA3CA,YAAY,CAACE,SAAS;MAAA;MAAA;MAAA;IAAA,QAAwB;EAAA,gBAK1E;AAEX;AAAC,KA9BcJ,MAAM;AAgCrB,eAAeA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}