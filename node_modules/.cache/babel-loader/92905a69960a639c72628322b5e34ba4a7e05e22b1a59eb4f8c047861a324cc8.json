{"ast":null,"code":"import _objectSpread from \"/Users/timothyfawcett/Desktop/Projects/FrontEndMentor/ip-address-tracker-master/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/timothyfawcett/Desktop/Projects/FrontEndMentor/ip-address-tracker-master/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/Users/timothyfawcett/Desktop/Projects/FrontEndMentor/ip-address-tracker-master/my-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _toPropertyKey from \"/Users/timothyfawcett/Desktop/Projects/FrontEndMentor/ip-address-tracker-master/my-app/node_modules/@babel/runtime/helpers/esm/toPropertyKey.js\";\nimport { LeafletProvider, addClassName, useLeafletContext } from '@react-leaflet/core';\nimport React, { forwardRef, useState, useEffect, useImperativeHandle, useMemo } from 'react';\nimport { createPortal } from 'react-dom';\nvar DEFAULT_PANES = ['mapPane', 'markerPane', 'overlayPane', 'popupPane', 'shadowPane', 'tilePane', 'tooltipPane'];\nfunction omitPane(obj, pane) {\n  var _p = obj[pane],\n    others = _objectWithoutProperties(obj, [pane].map(_toPropertyKey));\n  return others;\n}\nfunction createPane(name, props, context) {\n  var _props$pane;\n  if (DEFAULT_PANES.indexOf(name) !== -1) {\n    throw new Error(\"You must use a unique name for a pane that is not a default Leaflet pane: \".concat(name));\n  }\n  if (context.map.getPane(name) != null) {\n    throw new Error(\"A pane with this name already exists: \".concat(name));\n  }\n  var parentPaneName = (_props$pane = props.pane) !== null && _props$pane !== void 0 ? _props$pane : context.pane;\n  var parentPane = parentPaneName ? context.map.getPane(parentPaneName) : undefined;\n  var element = context.map.createPane(name, parentPane);\n  if (props.className != null) {\n    addClassName(element, props.className);\n  }\n  if (props.style != null) {\n    Object.keys(props.style).forEach(function (key) {\n      // @ts-ignore\n      element.style[key] = props.style[key];\n    });\n  }\n  return element;\n}\nfunction PaneComponent(props, forwardedRef) {\n  var _useState = useState(props.name),\n    _useState2 = _slicedToArray(_useState, 1),\n    paneName = _useState2[0];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    paneElement = _useState4[0],\n    setPaneElement = _useState4[1];\n  useImperativeHandle(forwardedRef, function () {\n    return paneElement;\n  }, [paneElement]);\n  var context = useLeafletContext();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  var newContext = useMemo(function () {\n    return _objectSpread(_objectSpread({}, context), {}, {\n      pane: paneName\n    });\n  }, [context]);\n  useEffect(function () {\n    setPaneElement(createPane(paneName, props, context));\n    return function removeCreatedPane() {\n      var _pane$remove;\n      var pane = context.map.getPane(paneName);\n      pane === null || pane === void 0 ? void 0 : (_pane$remove = pane.remove) === null || _pane$remove === void 0 ? void 0 : _pane$remove.call(pane);\n      // @ts-ignore map internals\n      if (context.map._panes != null) {\n        // @ts-ignore map internals\n        context.map._panes = omitPane(context.map._panes, paneName);\n        // @ts-ignore map internals\n        context.map._paneRenderers = omitPane(\n        // @ts-ignore map internals\n        context.map._paneRenderers, paneName);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return props.children != null && paneElement != null ? /*#__PURE__*/createPortal( /*#__PURE__*/React.createElement(LeafletProvider, {\n    value: newContext\n  }, props.children), paneElement) : null;\n}\nexport var Pane = /*#__PURE__*/forwardRef(PaneComponent);","map":{"version":3,"names":["LeafletProvider","addClassName","useLeafletContext","React","forwardRef","useState","useEffect","useImperativeHandle","useMemo","createPortal","DEFAULT_PANES","omitPane","obj","pane","_p","others","createPane","name","props","context","indexOf","Error","map","getPane","parentPaneName","parentPane","undefined","element","className","style","Object","keys","forEach","key","PaneComponent","forwardedRef","paneName","paneElement","setPaneElement","newContext","removeCreatedPane","remove","_panes","_paneRenderers","children","createElement","value","Pane"],"sources":["/Users/timothyfawcett/Desktop/Projects/FrontEndMentor/ip-address-tracker-master/my-app/node_modules/react-leaflet/lib/Pane.js"],"sourcesContent":["import { LeafletProvider, addClassName, useLeafletContext } from '@react-leaflet/core';\nimport React, { forwardRef, useState, useEffect, useImperativeHandle, useMemo } from 'react';\nimport { createPortal } from 'react-dom';\nconst DEFAULT_PANES = [\n    'mapPane',\n    'markerPane',\n    'overlayPane',\n    'popupPane',\n    'shadowPane',\n    'tilePane',\n    'tooltipPane'\n];\nfunction omitPane(obj, pane) {\n    const { [pane]: _p , ...others } = obj;\n    return others;\n}\nfunction createPane(name, props, context) {\n    if (DEFAULT_PANES.indexOf(name) !== -1) {\n        throw new Error(`You must use a unique name for a pane that is not a default Leaflet pane: ${name}`);\n    }\n    if (context.map.getPane(name) != null) {\n        throw new Error(`A pane with this name already exists: ${name}`);\n    }\n    const parentPaneName = props.pane ?? context.pane;\n    const parentPane = parentPaneName ? context.map.getPane(parentPaneName) : undefined;\n    const element = context.map.createPane(name, parentPane);\n    if (props.className != null) {\n        addClassName(element, props.className);\n    }\n    if (props.style != null) {\n        Object.keys(props.style).forEach((key)=>{\n            // @ts-ignore\n            element.style[key] = props.style[key];\n        });\n    }\n    return element;\n}\nfunction PaneComponent(props, forwardedRef) {\n    const [paneName] = useState(props.name);\n    const [paneElement, setPaneElement] = useState(null);\n    useImperativeHandle(forwardedRef, ()=>paneElement, [\n        paneElement\n    ]);\n    const context = useLeafletContext();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const newContext = useMemo(()=>({\n            ...context,\n            pane: paneName\n        }), [\n        context\n    ]);\n    useEffect(()=>{\n        setPaneElement(createPane(paneName, props, context));\n        return function removeCreatedPane() {\n            const pane = context.map.getPane(paneName);\n            pane?.remove?.();\n            // @ts-ignore map internals\n            if (context.map._panes != null) {\n                // @ts-ignore map internals\n                context.map._panes = omitPane(context.map._panes, paneName);\n                // @ts-ignore map internals\n                context.map._paneRenderers = omitPane(// @ts-ignore map internals\n                context.map._paneRenderers, paneName);\n            }\n        };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    return props.children != null && paneElement != null ? /*#__PURE__*/ createPortal(/*#__PURE__*/ React.createElement(LeafletProvider, {\n        value: newContext\n    }, props.children), paneElement) : null;\n}\nexport const Pane = /*#__PURE__*/ forwardRef(PaneComponent);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}